#!/usr/bin/env bash
set -e
set -o pipefail

LOG_DIR="/root/mediaEase/logs"
LOG_FILE="$LOG_DIR/mediaEase.log"
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 6)
NC=$(tput sgr0)
VERBOSE_MODE=false

# logger function

function logger::die() {
    local errorMsg="$1"
    logger::log "error" "$errorMsg"
    option="user"
    if [[ $option != "reseller" ]]; then
        exit 1
    else
        return 1
    fi
}

function logger::do() {
    local command="$1"
    local status
    # echo "Executing: $command" # Debugging line
    if [[ "$VERBOSE_MODE" == "false" ]]; then
        eval "$command" >/dev/null 2>&1
        status=$?
    else
        if [[ ! -d "$LOG_DIR" ]]; then
            mkdir -p "$LOG_DIR"
        fi
        eval "$command" >>"$LOG_FILE" 2>&1
        status=$?
    fi

    if [ $status -ne 0 ]; then
        logger::log "error" "$(i18n::translate 'command_failed' "$command")"
    fi
    return $status
}

function logger::log() {
    local level="$1"
    local message="$2"
    local timestamp
    timestamp=$(date +"%Y-%m-%d %H:%M:%S")
    if [[ ! -d "$LOG_DIR" ]]; then
        mkdir -p "$LOG_DIR"
    fi
    if [[ "$level" == "debug" && "$VERBOSE_MODE" == "false" ]]; then
        return
    fi
    local log_str="[${level^^}] - $timestamp - $message"
    printf "%s\n" "$log_str" >>"$LOG_FILE"
    case "$level" in
    "info")
        printf "${BLUE}%s${NC}\n" "$message"
        ;;
    "debug")
        printf "${YELLOW}%s${NC}\n" "$message"
        ;;
    "error")
        printf "${RED}%s${NC}\n" "$message"
        ;;
    "warning")
        printf "${YELLOW}%s${NC}\n" "$message"
        ;;
    "success")
        printf "${GREEN}%s${NC}\n" "$message"
        ;;
    *)
        printf "%s\n" "$message"
        ;;
    esac
}

function logger::prompt_info() {
    local message="$1"
    local var_name="$2"
    local input_type="${3:-normal}"

    case "$input_type" in
    "secret")
        read -r -s -p "$message: " "${var_name?}"
        echo
        ;;
    *)
        read -r -p "$message: " "${var_name?}"
        ;;
    esac
}

function logger::safe_exit() {
    local exit_code="$1"
    local message="$2"
    if [[ "$exit_code" -eq 0 ]]; then
        printf "${GREEN} - %s${NC}\n" "$message"
    else
        printf "${RED} - %s${NC}\n" "$message"
        exit "$exit_code"
    fi
}
